pub mod cpu;
pub mod memory;

pub const SPRITE_CHARS: [[u8; 5]; 0x10] = [
    [0xF0, 0x90, 0x90, 0x90, 0xF0], // 0
    [0x20, 0x60, 0x20, 0x20, 0x70], // 1
    [0xF0, 0x10, 0xF0, 0x80, 0xF0], // 2
    [0xF0, 0x10, 0xF0, 0x10, 0xF0], // 3
    [0x90, 0x90, 0xF0, 0x10, 0x10], // 4
    [0xF0, 0x80, 0xF0, 0x10, 0xF0], // 5
    [0xF0, 0x80, 0xF0, 0x90, 0xF0], // 6
    [0xF0, 0x10, 0x20, 0x40, 0x40], // 7
    [0xF0, 0x90, 0xF0, 0x90, 0xF0], // 8
    [0xF0, 0x90, 0xF0, 0x10, 0xF0], // 9
    [0xF0, 0x90, 0xF0, 0x90, 0x90], // A
    [0xE0, 0x90, 0xE0, 0x90, 0xE0], // B
    [0xF0, 0x80, 0x80, 0x80, 0xF0], // C
    [0xE0, 0x90, 0x90, 0x90, 0xE0], // D
    [0xF0, 0x80, 0xF0, 0x80, 0xF0], // E
    [0xF0, 0x80, 0xF0, 0x80, 0x80], // F
];

pub const SPRITE_CHARS_ADDR: u16 = 0x0000;
pub const FRAME_TICKS: i32 = 16666;
pub const RAM_SIZE: usize = 4096;
pub const PROGRAM_START_ADDRESS: u16 = 0x0200;
pub const REGISTER_COUNT: usize = 16;
pub const STACK_DEPTH: usize = 16;
pub const SCALE: f32 = 10.0;
pub const COLS: u8 = 64;
pub const ROWS: u8 = 32;

pub trait Input {
    fn is_pressed(&self, key: usize) -> bool;
    fn has_been_released(&self, key: usize) -> bool;
}

pub trait Output {
    fn clear(&mut self);
    fn get_pixel(&self, addr: usize) -> bool;
    fn set_pixel(&mut self, addr: usize, value: bool);
    fn flip_pixel(&mut self, addr: usize);
    fn set_draw_flag(&mut self, value: bool);
}

pub trait Speaker {
    fn start(&mut self);
    fn stop(&mut self);
    fn is_playing(&self) -> bool;
}
