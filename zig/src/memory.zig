const std = @import("std");
pub const Memory = struct {
    ram: [4096]u8,

    const Self = @This();

    pub fn init() Self {
        var memory = [_]u8{0x00} ** 4096;

        // Load font
        const font: [0x50]u8 = [_]u8 {
            0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
            0x20, 0x60, 0x20, 0x20, 0x70, // 1
            0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
            0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
            0x90, 0x90, 0xF0, 0x10, 0x10, // 4
            0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
            0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
            0xF0, 0x10, 0x20, 0x40, 0x40, // 7
            0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
            0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
            0xF0, 0x90, 0xF0, 0x90, 0x90, // A
            0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
            0xF0, 0x80, 0x80, 0x80, 0xF0, // C
            0xE0, 0x90, 0x90, 0x90, 0xE0, // D
            0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
            0xF0, 0x80, 0xF0, 0x80, 0x80  // F
        };
        std.mem.copy(u8, memory[0x50..], font[0..]);
        return Memory{
            .ram = memory,
        };
    }

    pub fn loadProgram(self: *Self, addr: u16,  program: []u8, length: usize) void {
        std.mem.copy(u8, self.ram[addr..], program[0..length]);
    }

    pub fn get(self: *Self, addr: u16) u8 {
        return self.ram[addr];
    }
};